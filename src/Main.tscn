[gd_scene load_steps=10 format=2]

[ext_resource path="res://camera/CameraController.gd" type="Script" id=1]
[ext_resource path="res://camera/StateRotateAbout.gd" type="Script" id=2]
[ext_resource path="res://camera/StateScroll.gd" type="Script" id=3]
[ext_resource path="res://FadingPlane.gd" type="Script" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx;
uniform float opacity : hint_range(0,1);
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float distance_fade_min;
uniform float distance_fade_max;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_metallic : hint_white;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_white;
uniform vec4 roughness_texture_channel;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	ALPHA = opacity;
	//ALPHA = albedo.a * albedo_tex.a;
	//ALPHA*=clamp(smoothstep(distance_fade_min,distance_fade_max,-VERTEX.z),0.0,1.0);
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/opacity = 1.0
shader_param/albedo = Color( 0.784314, 0.784314, 0.784314, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/distance_fade_min = 0.0
shader_param/distance_fade_max = 10.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/metallic_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/roughness_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )

[sub_resource type="QuadMesh" id=3]
material = SubResource( 2 )
size = Vector2( 30, 30 )

[sub_resource type="CubeMesh" id=4]

[sub_resource type="SpatialMaterial" id=5]

[node name="Main" type="Spatial"]

[node name="GUI" type="CanvasLayer" parent="."]

[node name="HSplitContainer" type="HSplitContainer" parent="GUI"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Button" type="Button" parent="GUI/HSplitContainer"]
margin_right = 45.0
margin_bottom = 600.0
text = "test1"

[node name="HSplitContainer" type="HSplitContainer" parent="GUI/HSplitContainer"]
margin_left = 57.0
margin_right = 1024.0
margin_bottom = 600.0

[node name="ReferenceRect" type="Control" parent="GUI/HSplitContainer/HSplitContainer"]
margin_right = 910.0
margin_bottom = 600.0
focus_next = NodePath(".")
focus_mode = 1
mouse_filter = 1
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="test2" type="Button" parent="GUI/HSplitContainer/HSplitContainer"]
margin_left = 922.0
margin_right = 967.0
margin_bottom = 600.0
text = "test2"

[node name="CameraController" type="Spatial" parent="."]
script = ExtResource( 1 )

[node name="Camera" type="Camera" parent="CameraController"]
transform = Transform( 1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 6, 6 )

[node name="StateRotateAbout" type="Node" parent="CameraController"]
script = ExtResource( 2 )

[node name="StateScroll" type="Node" parent="CameraController"]
script = ExtResource( 3 )

[node name="FadingPlane" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0 )
mesh = SubResource( 3 )
material/0 = null
script = ExtResource( 4 )
camera_path = NodePath("../CameraController/Camera")

[node name="FadeTween" type="Tween" parent="FadingPlane"]

[node name="Cube" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.2026, 0 )
mesh = SubResource( 4 )
material/0 = SubResource( 5 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, -0.766044, 0.642788, 0, -0.642788, -0.766044, 0, 11, -17 )
light_energy = 0.55
shadow_enabled = true

[connection signal="gui_input" from="GUI/HSplitContainer/HSplitContainer/ReferenceRect" to="CameraController" method="_on_ReferenceRect_gui_input"]
